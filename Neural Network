df = pd.read_csv("STATES3x3.csv", index_col=0)
df = df.sample(frac=1)
target = df["Dist"]
df.drop(columns=["Dist"], inplace=True)
data = tf.keras.utils.to_categorical(df.values, num_classes=48)
X_train, X_test, y_train, y_test = train_test_split(data, target, test_size=0.2, random_state=2022)

model = tf.keras.Sequential()

model.add(tf.keras.layers.Flatten(input_shape=(48, 48)))
model.add(tf.keras.layers.Dense(1000, activation="relu"))
model.add(tf.keras.layers.Dense(200, activation="relu"))
model.add(tf.keras.layers.Dense(100, activation="relu"))
model.add(tf.keras.layers.Dense(10, activation="relu"))
model.add(tf.keras.layers.Dense(1, activation="relu"))

model.compile(optimizer="Adam", loss="mse")

model.summary()

model.fit(X_train, y_train, validation_data=(X_test, y_test), epochs=5, batch_size=32)

print(target.mean())
print(target.std())

y_test_pred = model.predict(X_test, batch_size=32)
plt.scatter(y_test, y_test_pred)
y_train_pred = model.predict(X_train, batch_size=32)
plt.scatter(y_train, y_train_pred)
